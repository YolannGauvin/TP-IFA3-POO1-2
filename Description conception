Format de fichier :
nt : Nombre de trajet dans catalogue
(
(S ou C)|VilleDepart|VilleArrivée|(Moyen ou nbrTrajet)
) * nt

Format de ville : caractères Européens

Format de moyen : enum [VOITURE, TRAIN, AVION, BATEAU, MARCHE, VELO]


DEMO
------------------------------
3
S|Lyon|Bordeaux|1
C|Lyon|Paris|2
S|Lyon|Marseille|3
S|Marseille|Paris|2
S|Lyon|Paris|0
------------------------------

Gestion des fichiers :
Noms des fichiers saisis par l'utilisateur
En cas d'existence du nom de fichier saisis lors d'une sauvegarde, réécris par dessus le fichier déjà existant
Sauvegarde des fichiers dans le répertoire d'exécution

En cas d'impossibilité d'écriture ou de lecture : avertissement de l'échec dans la sortie standard d'erreur
En cas de nom de fichier invalide : avertissement de l'échec dans la sortie standard d'erreur

-----------------------------------------------------------------------------------
Spécification des fonctionnalités (dans le main):

Ajout de deux options dans le menu principal :
-Chargement
-Sauvegarde

Après séléction d'une des deux options ci-dessus, propose 4 critères :
-1-Tous les trajets
-2-Par type de trajet
-3-Par ville de départ et/ou ville d'arrivée
-4-Par intervalle

Détails des critères 
Critère 1 - Tous les trajets

Critère 2 - Par type de trajet
-1-Simple
-2-Composé

Critère 3 - Par ville de départ et/ou ville d'arrivée
Ville de départ : (* Pour tous)
Ville d'arrivée : (* Pour tous)

Critère 4 - Par intervalles
Indice du premier trajet : 
Nombre de trajets :

Arpès séléction des critères demande du nom de fichier :
Nom de fichier : (Sauvegarde/Chargement dans le répertoire d'exécution)

-----------------------------------------------------------------------------------
Services des classe: 

Trajet :
enum typeTrajet { SIMPLE, COMPOSE };

Catalogue :
virtual void AfficherFiltre() const;
// Affichage sans filtre

virtual void AfficherFiltre(typeTrajet type) const;
// Affiche tous les trajets du catalogue sur la sortie standard du même type que celui passé en paramètre

virtual void AfficherFiltre(const char * villeDepart, const char * villeArrivee) const;
// Affiche tous les trajets du catalogue sur la sortie standard ayant pour ville de départ et pour ville d'arrivée les villes passées en paramètre
// si un des paramètres = '*', on n'applique pas de filtre sur ce type de ville

virtual void AfficherFiltre(unsigned int debut, unsigned int taille) const;
// Affiche tous les trajets du catalogue sur la sortie standard compris dans l'intervalle [debut, debut + taille[
// debut < nombre de trajets du catalogue
// Tronque la taille si debut + taille > nombre de trajets du catalogue

virtual void NombreDeTrajets() const;
// Renvoie le nombre de trajets dans le catalogue


















